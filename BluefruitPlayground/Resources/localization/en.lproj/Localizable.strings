// AUTO-GENERATED
// General

"NSBluetoothAlwaysUsageDescription" = "This app needs access to Bluetooth to connect to Bluefruit devices";
"NSCameraUsageDescription" = "Puppet module requires access to the camera";

// Startup
"startup_bluetooth_unsupported" = "This device doesn't support Bluetooth Low Energy which is needed to connect to Bluefruit devices";


// Splash
"splash_restoringconnection" = "Restoring connection...";



// Welcome
"tip0_title" = "Welcome";
"tip0_text" = "Bluefruit Playground provides you with a variety of tools to communicate with Circuit Playground Bluefruit & Adafruit CLUE!
Click the links above to purchase a board from the Adafruit shop.";
"tip0_link0_text" = "Circuit Playground Bluefruit";
"tip0_link0_url" = "https://www.adafruit.com/product/4333";
"tip0_link1_text" = "Adafruit CLUE";
"tip0_link1_url" = "https://www.adafruit.com/product/4500";
"tip0_action" = "Let's get started...";
"tip1_title" = "Power Up";
"tip1_text" = "First, follow the instructions here to load the correct firmware. Then, connect your Bluefruit device to USB, AAA battery pack or a Lipoly battery to power up.";
"tip1_link_text" = "instructions here";
"tip1_link_url" = "https://learn.adafruit.com/bluefruit-playground-app/firmware";
"tip1_action" = "Next";
"tip2_title" = "Discover";
"tip2_text" = "Once your Bluefruit device is powered, move it close to your iPhone.";
"tip2_action" = "Begin pairing";


// About
"about_title" = "About";
"about_app_name" = "Bluefruit Playground";
"about_ios_text" = "Bluefruit Playground is designed for use with specific Adafruit Bluefruit devices. Follow the links below to purchase a compatible device from the Adafruit shop:
• Circuit Playground Bluefruit
• Adafruit CLUE

Before you can use this app, you'll need to load a special uf2 firmware file onto your device. Learn more in the Bluefruit Playground Learn Guide.

Acknowledgements

Portions of this Software may utilize the following copyrighted material, the use of which is hereby acknowledged. 

FlexColorPicker
Copyright (c) 2018 Rastislav Mirek
https://github.com/RastislavMirek/FlexColorPicker

Charts
Copyright (c) 2016 Daniel Cohen Gindi & Philipp Jahoda
https://github.com/danielgindi/Charts

ActiveLabel
Copyright (c) 2015 Optonaut
https://github.com/optonaut/ActiveLabel.swift

MSWeakTimer
Copyright (c) 2013 MindSnacks
https://github.com/mindsnacks/MSWeakTimer";
"about_ios_link0_text" = "Circuit Playground Bluefruit";
"about_ios_link0_url" = "https://www.adafruit.com/product/4333";
"about_ios_link1_text" = "Adafruit CLUE";
"about_ios_link1_url" = "https://www.adafruit.com/product/4500";
"about_ios_link2_text" = "uf2 firmware file";
"about_ios_link2_url" = "https://learn.adafruit.com/bluefruit-playground-app/firmware";
"about_ios_link3_text" = "Bluefruit Playground Learn Guide";
"about_ios_link3_url" = "https://learn.adafruit.com/bluefruit-playground-app/overview";

// Bluetooth Status

"bluetooth_unsupported" = "This device doesn't support Bluetooth";
"bluetooth_unsupported_detail" = "Bluetooth support and specifically Bluetooth Low Energy support is needed to communicate with a Bluefruit Device";
"bluetooth_unsupported_le" = "This device doesn't support Bluetooth Low Energy";
"bluetooth_unsupported_le_detail" = "Bluetooth Low Energy support is needed to communicate with a Bluefruit Device";
"bluetooth_notauthorized" = "This app is not authorized to use the Bluetooth Low Energy";
"bluetooth_notauthorized_detail" = "Bluetooth permission should be granted for Bluefruit Playground to connect to a Bluefruit Device";
"bluetooth_poweredoff" = "Bluetooth is currently powered off";
"bluetooth_poweredoff_detail" = "Bluetooth should be enabled on your device for Bluefruit Playground to communicate with a Bluefruit Device";

"bluetooth_enable_action" = "Bluetooth permissions";

// Autoconnect
"autoconnect_title" = "Finding Device";
"autoconnect_manual_action" = "Select device manually";
"autoconnect_backbutton" = "Autoconnect";

"autoconnect_searching" = "Hold Bluefruit board close to your iPhone...";
"autoconnect_startscanning_action" = "Connect";

// Scanner
"scanner_title" = "Select Device";

"scanner_connecting" = "Connecting...";
"scanner_discoveringservices" = "Discovering services...";
"scanner_errordiscoveringservices" = "Error discovering peripheral services";
"scanner_peripheraldisconnected" = "Peripheral disconnected";

"scanner_searching" = "Finding Adafruit devices...";
"scanner_subtitle" = "Select a Bluefruit device to connect to:";
"scanner_unnamed" = "<Unknown>";

"scanner_automatic_action" = "Select device automatically";
"scanner_problems_action" = "I can't find my device";
"scanner_backbutton" = "Disconnect";

"scanner_error_startboard" = "Error communicating with device";

// Scanner Problems
"scannerproblems_title" = "Troubleshooting";

"scannerproblems_tip0_title" = "Turn on the Bluefruit device";
"scannerproblems_tip0_details" = "Make sure that the Bluefruit device is powered on. 
Verify that the green \"On\" light is lit.";
"scannerproblems_tip1_title" = "Check the Bluefruit device's firmware";
"scannerproblems_tip1_details" = "You'll need to load a specific firmware on your Bluefruit device to interact with this app.
Download it from the Bluefruit Playground guide at learn.adafruit.com";
"scannerproblems_tip1_link_text" = "Bluefruit Playground guide at learn.adafruit.com";
"scannerproblems_tip1_link_url" = "https://learn.adafruit.com/bluefruit-playground-app/firmware";
"scannerproblems_tip2_title" = "Reset Bluefruit device";
"scannerproblems_tip2_details" = "Try pressing the Reset button on the Bluefruit device.";


// Modules
"modules_title" = "Modules";
"modules_subtitle" = "Each module interacts with a specific sensor on the Bluefruit device";

"modules_color_title" = "NeoPixels";
"modules_color_subtitle" = "Control LED color & animation";
"modules_light_title" = "Light Sensor";
"modules_light_subtitle" = "View continuous light sensor readings";
"modules_button_title" = "Button Status";
"modules_button_subtitle" = "View state of built-in buttons & switch";
"modules_tone_title" = "Tone Generator";
"modules_tone_subtitle" = "Turn your Bluefruit device into a musical instrument";
"modules_accelerometer_title" = "Accelerometer";
"modules_accelerometer_subtitle" = "View orientation based on accelerometer data";
"modules_temperature_title" = "Temperature";
"modules_temperature_subtitle" = "View current temperature readings";
"modules_puppet_title" = "Puppets";
"modules_puppet_subtitle" = "Play with a 3D puppet using the accelerometer and buttons";
"modules_humidity_title" = "Humidity";
"modules_humidity_subtitle" = "View relative humidity percentage";
"modules_pressure_title" = "Pressure";
"modules_pressure_subtitle" = "View barometric pressure values";
"modules_sound_title" = "Sound Level";
"modules_sound_subtitle" = "View sound level in decibels";
"modules_quaternion_title" = "Orientation";
"modules_quaternion_subtitle" = "View CLUE's relative position in space";

"modules_disconnect_title" = "Disconnect";
"modules_disconnect_subtitle" = "Close the current connection and scan for a new device";


// Neopixels
"neopixels_title" = "NeoPixels";
"neopixels_help_cpb" = "NeoPixels mode allows you to control the color of CPB’s built-in NeoPixel LEDs individually, as a group, or by playing preset animations.

• Select NeoPixels to control by tapping them in the Circuit Playground Bluefruit image.

• Set the color of selected NeoPixels by choosing a color from the Color Palette or Color Wheel at the bottom.

• Tap a light sequence to trigger an animation using all of the NeoPixels.";
"neopixels_help_clue" = "NeoPixel mode allows you to control the color of CLUE's built-in NeoPixel LED. 
Set the color of the NeoPixel by choosing a color from the Color Palette or Color Wheel at the bottom.";


"neopixels_sequence_title" = "Light Sequence";
"neopixels_sequence_speed" = "Speed";
"neopixels_palette_title" = "Color Palette";
"neopixels_palette_brightness" = "Brightness";
"neopixels_colorwheel_title" = "Color Wheel";
"neopixels_colorwheel_brightness" = "Brightness";


// Light Sensor
"lightsensor_title" = "Light Sensor";
"lightsensor_help_cpb" = "Light Sensor mode allows you to view the amount of light detected by Circuit Playground Bluefruit’s built-in ALS-PT19 light sensor.

• The current light level reading is displayed at the bottom of the screen. 

• Try shining a flashlight on the CPB and watch the values change in realtime";
"lightsensor_help_clue" = "Light Sensor mode allows you to view the amount of light detected by CLUE’s built-in ALS-PT19 light sensor.

• The current light level reading is displayed at the bottom of the screen. 

• Try shining a flashlight on the CLUE and watch the values change in realtime";

"lightsensor_panel_title" = "Luminance Reading";
"lightsensor_panel_unit" = "Light level";
"lightsensor_chartpanel_title" = "Luminance Chart";

// Button Status
"buttonstatus_title" = "Button Status";
"buttonstatus_help_cpb" = "Button Status mode shows which buttons are currently being pressed on Circuit Playground Bluefruit. 

• Currently active buttons are displayed in orange at the bottom

• Current state of the built-in slide switch is displayed as an arrow indicating its position";
"buttonstatus_help_clue" = "Button Status mode shows which of CLUE's built-in buttons are currently being pressed.
Currently active buttons are displayed in orange at the bottom.";

"buttonstatus_panel_title" = "Buttons Pressed";
"buttonstatus_panel_switch" = "Switch";
"buttonstatus_panel_button_a" = "Button A";
"buttonstatus_panel_button_b" = "Button B";


// Tone Generator
"tonegenerator_title" = "Tone Generator";
"tonegenerator_help_cpb" = "Tone Generator mode allows you to use Circuit Playground Bluefruit as a simple music synthesizer.

• Press a key on the piano keyboard to play a corresponding tone on the built-in piezo buzzer.

• Press keys in sequence to perform a song";
"tonegenerator_help_clue" = "Tone Generator mode allows you to use CLUE as a simple music synthesizer.

• Press a key on the piano keyboard to play a corresponding tone on the built-in piezo buzzer.

• Press keys in sequence to perform a song";


// Accelerometer
"accelerometer_title" = "Accelerometer";
"accelerometer_help" = "Accelerometer mode uses readings from Circuit Playground Bluefruit’s LIS3DH 3-axis XYZ accelerometer to determine the board’s current orientation.
 
• Orientation is reflected in the position of the 3D model

• Individual values are displayed in the space at the bottom of the screen.

• Drag the 3D model in any direction to apply a rotation offset.

• Double tap the 3D model to remove rotation offset";

"accelerometer_panel_title" = "Device Orientation";
"accelerometer_panel_accelerometer_title" = "Accelerometer (m/s²):";
"accelerometer_panel_eulerangles_title" = "Euler Angles (degrees):";

// Temperature
"temperature_title" = "Temperature";
"temperature_help" = "Temperature mode displays continuous temperature readings from Circuit Playground Bluefruit’s built-in thermistor. 

• Switch between Fahrenheit and Celsius units by tapping the °F/°C button in the lower right corner.

• Previous temperature values are recorded and displayed in the graph at the bottom.

• Try breathing hot air on the CPB and watch the values change in realtime";
"temperature_units_celsius" = "ºC";
"temperature_units_farenheit" = "ºF";

"temperature_panel_title" = "Temperature Chart";
"temperature_chart_nodata" = "No chart data available";


// Puppet
"puppet_title" = "Puppets";
"puppet_help_header" = "The Puppets module allows you to animate a 3D puppet in real time using Circuit Playground Bluefruit. 

To control Sparky the Blue Smoke Monster, attach Circuit Playground Bluefruit to the back of your fingers using a rubber band as seen below:";
"puppet_help_details" = "• Tilt your board forward or backwards to open and close the mouth of the puppet.
• Try tilting your board to tilt the puppet’s head left or right.
• Press the A or B button on Circuit Playground Bluefruit to trigger preset animations.
• Use the buttons at the bottom to record the screen, change background, camera, & fullscreen mode. ";


"puppet_recording_error_title" = "Recording Error";
"puppet_recording_error_description" = "Recording was cancelled. Please try again.";

"puppet_panel_title" = "Camera Controls";

// Humidity
"humidity_title" = "Humidity";
"humidity_help" = "The Humidity module displays relative humidity values sent from your Bluefruit device. Values are visually represented as a raindrop container as well as a graph showing changes in relative humidity over time.";

"humidity_panel_title" = "Relative Humidity";
"humidity_chart_nodata" = "No chart data available";

// Pressure
"pressure_title" = "Pressure";
"pressure_help" = "The Pressure module displays barometric pressure values sent from your Bluefruit device, measured in hectoPascals. Values are shown visually in a traditional barometer graphic as well as a graph showing changes in barometric pressure over time.";

"pressure_panel_title" = "Barometric Pressure";
"pressure_chart_nodata" = "No chart data available";

// Sound
"sound_title" = "Sound Level";
"sound_units" = "dB";
"sound_help" = "The Sound Level module displays sound level readings sent from your Bluefruit device, measured in decibels.
Values are displayed in realtime in the form of a traditional VU meter as well as a graph showing changes over time.";

"sound_panel_title" = "Sound Level";
"sound_chart_nodata" = "No chart data available";

// Quaternion

"quaternion_title" = "Orientation";
"quaternion_help" = "The Orientation module uses readings from CLUE's accelerometer, magnetometer, & gyro sensors to determine the board’s rotational position.

• Orientation is reflected in the position of the 3D model

• Individual values are displayed in the space at the bottom of the screen.

• Drag the 3D model in any direction to apply a rotation offset.

• Double tap the 3D model to remove rotation offset";

"quaternion_panel_title" = "Device Orientation";
"quaternion_panel_quaternion_title" = "Quaternion:";
"quaternion_panel_eulerangles_title" = "Euler Angles (degrees):";



// Help
"help_title" = "Help";

// Common
"dialog_ok" = "OK";
"dialog_cancel" = "Cancel";
"dialog_error" = "Error";
"dialog_notice" = "Notice";
"dialog_dontshowagain" = "Don't show again";
"dialog_done" = "Done";